---
- name: Fix Ceph apt sources
  copy:
    dest: /etc/apt/sources.list.d/ceph.list
    content: |
      # managed by Ansible
      deb http://download.proxmox.com/debian/ceph-quincy {{ ansible_distribution_release }} no-subscription
      deb http://download.proxmox.com/debian/ceph-reef {{ ansible_distribution_release }} no-subscription

- name: Add PVE no-subscription apt sources
  copy:
    dest: /etc/apt/sources.list.d/pve-no-subscription.list
    content: |
      # managed by ansible
      deb http://download.proxmox.com/debian/pve {{ ansible_distribution_release }} pve-no-subscription

- name: Comment out pve-enterprise sources
  replace:
    path: /etc/apt/sources.list.d/pve-enterprise.list
    regexp: '^(?!#)'
    replace: '#'

- name: Update Debian apt sources to mirror.xmission.com
  replace:
    path: /etc/apt/sources.list
    regexp: 'ftp.us.debian.org'
    replace: 'mirror.xmission.com'

- name: Update apt cache
  apt:
    update_cache: yes

- name: Disable subscription nag
  notify: Reinstall proxmox-widget-toolkit
  copy:
    dest: /etc/apt/apt.conf.d/no-nag-script
    content: |
      # managed by Ansible
      DPkg::Post-Invoke { "dpkg -V proxmox-widget-toolkit | grep -q '/proxmoxlib\.js$'; if [ $? -eq 1 ]; then { echo 'Removing subscription nag from UI...'; sed -i '/.*data\.status.*{/{s/\!//;s/active/NoMoreNagging/}' /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js; }; fi"; };

- name: Set root password
  user:
    name: root
    update_password: always
    password: "{{ root_password_hash }}"
  become: true

- name: Set SSH authorized_keys for root
  authorized_key:
    user: root
    state: present
    key: "{{ item }}"
  with_items:
    - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDJNEonif7PNwf6DFR1/nqU9phsdgGFzSMO8EWkD3caLDoAs8/TvnQ+iwvzcox8yAKpU6uIaungjEil3LdiScQSB6yJXB++/4pO827+8AkYmo3seKWkk7LTpHuW8zPc8dbsre1uBCuV7VoAeMJkml1O4wwYooJVt55Nfj2qwVqbg7EMyO9C0KN6X85GLOV1WI3Oa95gmwJvnhg3sbFFW0l4DddsU7rmqzftHyfNzgg/X7VbBa1GzAhhr+EmCh19r8msAgVj6odKutk9/Z8bvE9kUH1+4c0WkdpeVOkdcacluRFZ3lrb9+UTdZ/H1ebTEKbpp/wg7eGT+pO4JcFNrqSqyiVkcBjYi6u8rzCJ3KjSy9718wwWM+y3m/NW0gCuuKTQnCeNqe+b1SUvvPZqGvMykGxStHszkVSDjuGZlu9IsP59ALSWDOvTkybu+fIONw4EmItrdPmGqGHYuA0tTzwLh4QqPr8fvF8sZaVislzHaPWzwaafKc2QpxjoABpfXdU= # linux"
    - "ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBK3iRP3Unzjkv8+WvKQyaJCtEAAnC8jPjYqv/H4gSpu/nlhLweTW5LStsolj/Dbiya5nzZDkHI5HRSRhlIFx4Vw= # secretive (MacBook Air 15)"
    - "ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEMajokRd8LTapXzNeh2EvgCchVLur6777HGThz4jvpnEAJfCtXOT/C1LLAQhCFc1hdNzCT/YD0AAOs/dY6hBS4= # macbook pro m4 14"
  
  become: true

- name: Remove SSH authorized_keys for root
  authorized_key:
    user: root
    state: absent
    key: "{{ item }}"
  with_items:
    - "ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBJxAV/7QW6fm8xwV05rDjh9eYZlXW54kBcSgfOVKVOAhSzzuH0+CmkZVL6vCYMBnkjGz/f33mp15WZBx4fjxLrw= # secretive (macbook pro)"
    - "ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBHd8PMFpRbXMohUHJqvJmaFyF/JZHyHajm7kyDuQ7tJx5EkdqSFJI9lgLG5m9UWj8x33AUUqbktgnwXx+Y2CK4s= # secretive (Mac Studio)"
    - "ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFWZDrQ8smOqsoryiPga0Y2o4K6S1jg3HK7hbZqUPurZcKKaV6ma8fGl+mkLtZg1jzIeVx0R8nqDZDrIHuO4df8= # macbook pro m4 14"

- name: install vim and axel
  apt:
    name:
      - vim
      - axel
    state: present
    update_cache: yes

- name: Check if local snippets are enabled
  shell: pvesm list local | grep -q ^local\:snippets
  register: pvesm_check
  failed_when: pvesm_check.rc == 2
  changed_when: pvesm_check.rc == 1

- name: Enable PVESM local snippets
  shell: pvesm set local -content snippets,iso,vztmpl,backup
  when: pvesm_check.rc == 1
  register: snippets_enable

- name: Wait for local snippets directory
  wait_for:
    path: /var/lib/vz/snippets
    timeout: 120

- name: Create /var/lib/vz/snippets/vendor.yaml
  copy:
    dest: /var/lib/vz/snippets/vendor.yaml
    # do NOT add any comments to the file, it will screw with cloud-init.
    content: |
      #cloud-config
      timezone: America/Denver
      package_update: true
      package_upgrade: true
      packages:
        - qemu-guest-agent
      runcmd:
          - touch /etc/cloud/cloud-init.disabled
          - sleep 1 && reboot

- name: install create_template.sh script
  copy:
    src: files/create_template.sh
    dest: /usr/local/bin/create_template.sh
    mode: 0700
    owner: root
    group: root